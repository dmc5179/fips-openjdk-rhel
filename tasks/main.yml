---
# tasks file for fips-openjdk-rhel

- name: install required packages (RPM)
  package:
    name:
      - java-11-openjdk-devel
      - nss-tools
    state: present
#  when:
#    (ansible_distribution == 'RedHat')

- name: Enable FIPS mode
  shell: fips-mode-setup --check
  register: fips_enabled

- name: Reboot nodes to activate FIPS mode
  shell: sleep 2 && shutdown -r now "FIPS mode enabled, rebooting"
  async: 1
  poll: 0
  when: fips_enabled.stdout == 'false'

- name: wait for nodes to finish rebooting
  local_action:
    module: wait_for
      host={{ inventory_hostname }}
      port=22
      delay=1
      timeout=900
  when: fips_enabled.stdout == 'false'

- name: determine JRE home directory from the java properties
  shell: java -XshowSettings:properties -version |& grep java.home | awk '{print $NF}'
  register: jre_home
  
- name: abort if java system property overrides are disabled
  shell: |
    SEC_CONF=$(find -L {{ lookup('env', 'JRE_HOME') }} -type f -name java.security)
    if [[ -z "$(grep 'security.overridePropertiesFile=true' $SEC_CONF)" ]]
    then
        echo
        echo "Make sure that OpenJDK allows system property overrides."
        echo "Edit $SEC_CONF"
        echo "and set 'security.overridePropertiesFile=true'."
        echo
        exit 1
    fi

#WORKDIR=$(pushd $(dirname $0) &> /dev/null && pwd && popd &> /dev/null)

- name: Create password file for the NSS database
  template:
    src: password.internal.j2
    dest: WORKDIR/password.internal

# initialize the NSS database
- name: Clear the NSS database
  file:
    path: "{{ NSSDB }}"
    state: absent

- name: Create the NSS database directory
  file:
    path: "{{ NSSDB }}"
    state: present

certutil -N -d $NSSDB -f $PASSFILE

# add the root CA
certutil -A -d $NSSDB -a -n rootca \
  -i $WORKDIR/certs/ca.cert.pem -t CT,C,C -f $PASSFILE

# add the intermediate CA
certutil -A -d $NSSDB -a -n subrootca \
  -i $WORKDIR/certs/intermediate.cert.pem -t CT,C,C -f $PASSFILE

# import the server cert and key
pk12util -i certs/server.p12 -d $NSSDB -k $PASSFILE -w $PASSFILE

# list all the certs and keys
certutil -L -d $NSSDB -h all
certutil -K -d $NSSDB -h all -f $PASSFILE

# clean up the password file
- name: Clean up the password file
  file:
    path: WORKDIR/password.internal
    state: absent


# modify the fips.provider.1 configuration from the java.security file
- name: Check FIPS provider
  shell: grep 'fips.provider.1=' $SEC_CONF | sed 's/^\(..*SunPKCS11\)..*/\1 \${user.home}\/nss.fips.cfg/g'
  register: fips_provider

- name: Create security property override file for the local user
  template:
    src: java.security.properties.j2
    dest: $HOME/java.security.properties

# point local user NSS config to the user's NSS database
cp $(dirname $SEC_CONF)/nss.fips.cfg $HOME
ESCHOME=$(echo $HOME | sed 's/\//\\\//g')
sed -i 's/\/etc\/pki\/nssdb/'$ESCHOME'\/nssdb/g' $HOME/nss.fips.cfg

echo
echo "$HOME/nss.fips.cfg and $HOME/nssdb contain the"
echo "NSS FIPS configuration for Java and the NSS database, respectively."
echo

